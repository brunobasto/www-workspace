version: '3.3'

networks:
  www-external:
    internal: false
  www-internal:
    internal: true

services:
  elasticsearch:
    container_name: elasticsearch
    image: elasticsearch:www-base
    networks:
      - "www-external"
      - "www-internal"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "elasticsearch:/usr/share/elasticsearch/data"
  httpd:
    container_name: httpd
    image: httpd:www-base
    networks:
      - "www-external"
      - "www-internal"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "apache:/var/www/html"
      - "./httpd/resources/:/tmp/httpd"
  liferay:
    container_name: liferay
    depends_on:
     - "mariadb"
    environment:
      - "VIRTUAL_PORT=8080"
      - "CATALINA_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,address=8000,server=y,suspend=n"
    image: liferay:www-base
    networks:
      - "www-external"
      - "www-internal"
    ports:
      - "8000:8000"
    user: root
    volumes:
      - "liferay:/opt/java/liferay/data"
      - "./liferay/resources:/tmp/liferay"
      - "./liferay/resources/deploy:/opt/java/liferay/deploy"
      - "./liferay/resources/osgi/modules:/opt/java/liferay/osgi/modules"
  mariadb:
    container_name: mariadb
    env_file:
      - "mariadb/mariadb.env"
    image: mariadb:www-base
    networks:
      - "www-external"
      - "www-internal"
    ports:
      - "3307:3306"
    volumes:
      - "mariadb:/var/lib/mysql"
      - "./mariadb/resources/docker-entrypoint-initdb.d:/tmp/mariadb"
  mockmock:
    build: mockmock/.
    container_name: mockmock
    expose:
      - "25"
    image: mockmock:www-local
    networks:
      - "www-external"
      - "www-internal"
    ports:
      - "8282:8282"
    volumes:
      - "mockmock:/home"
  hubspot:
    build: hubspot/.
    container_name: hubspot
    image: hubspot:www-local
    networks:
      - "www-external"
      - "www-internal"
    ports:
      - "8080:80"

volumes:
  apache:
  elasticsearch:
  liferay:
  mariadb:
  mockmock:

/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.osb.www.marketing.events.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.WorkflowedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the MarketingEventAnnouncement service. Represents a row in the &quot;OSB_MarketingEventAnnouncement&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.osb.www.marketing.events.model.impl.MarketingEventAnnouncementModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.osb.www.marketing.events.model.impl.MarketingEventAnnouncementImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MarketingEventAnnouncement
 * @see com.liferay.osb.www.marketing.events.model.impl.MarketingEventAnnouncementImpl
 * @see com.liferay.osb.www.marketing.events.model.impl.MarketingEventAnnouncementModelImpl
 * @generated
 */
@ProviderType
public interface MarketingEventAnnouncementModel extends BaseModel<MarketingEventAnnouncement>,
	WorkflowedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a marketing event announcement model instance should use the {@link MarketingEventAnnouncement} interface instead.
	 */

	/**
	 * Returns the primary key of this marketing event announcement.
	 *
	 * @return the primary key of this marketing event announcement
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this marketing event announcement.
	 *
	 * @param primaryKey the primary key of this marketing event announcement
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this marketing event announcement.
	 *
	 * @return the uuid of this marketing event announcement
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this marketing event announcement.
	 *
	 * @param uuid the uuid of this marketing event announcement
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the marketing event announcement ID of this marketing event announcement.
	 *
	 * @return the marketing event announcement ID of this marketing event announcement
	 */
	public long getMarketingEventAnnouncementId();

	/**
	 * Sets the marketing event announcement ID of this marketing event announcement.
	 *
	 * @param marketingEventAnnouncementId the marketing event announcement ID of this marketing event announcement
	 */
	public void setMarketingEventAnnouncementId(
		long marketingEventAnnouncementId);

	/**
	 * Returns the user ID of this marketing event announcement.
	 *
	 * @return the user ID of this marketing event announcement
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this marketing event announcement.
	 *
	 * @param userId the user ID of this marketing event announcement
	 */
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this marketing event announcement.
	 *
	 * @return the user uuid of this marketing event announcement
	 */
	public String getUserUuid();

	/**
	 * Sets the user uuid of this marketing event announcement.
	 *
	 * @param userUuid the user uuid of this marketing event announcement
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this marketing event announcement.
	 *
	 * @return the user name of this marketing event announcement
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this marketing event announcement.
	 *
	 * @param userName the user name of this marketing event announcement
	 */
	public void setUserName(String userName);

	/**
	 * Returns the create date of this marketing event announcement.
	 *
	 * @return the create date of this marketing event announcement
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this marketing event announcement.
	 *
	 * @param createDate the create date of this marketing event announcement
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this marketing event announcement.
	 *
	 * @return the modified date of this marketing event announcement
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this marketing event announcement.
	 *
	 * @param modifiedDate the modified date of this marketing event announcement
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the marketing event ID of this marketing event announcement.
	 *
	 * @return the marketing event ID of this marketing event announcement
	 */
	public long getMarketingEventId();

	/**
	 * Sets the marketing event ID of this marketing event announcement.
	 *
	 * @param marketingEventId the marketing event ID of this marketing event announcement
	 */
	public void setMarketingEventId(long marketingEventId);

	/**
	 * Returns the title of this marketing event announcement.
	 *
	 * @return the title of this marketing event announcement
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this marketing event announcement.
	 *
	 * @param title the title of this marketing event announcement
	 */
	public void setTitle(String title);

	/**
	 * Returns the message of this marketing event announcement.
	 *
	 * @return the message of this marketing event announcement
	 */
	@AutoEscape
	public String getMessage();

	/**
	 * Sets the message of this marketing event announcement.
	 *
	 * @param message the message of this marketing event announcement
	 */
	public void setMessage(String message);

	/**
	 * Returns the summary of this marketing event announcement.
	 *
	 * @return the summary of this marketing event announcement
	 */
	@AutoEscape
	public String getSummary();

	/**
	 * Sets the summary of this marketing event announcement.
	 *
	 * @param summary the summary of this marketing event announcement
	 */
	public void setSummary(String summary);

	/**
	 * Returns the image file entry ID of this marketing event announcement.
	 *
	 * @return the image file entry ID of this marketing event announcement
	 */
	public long getImageFileEntryId();

	/**
	 * Sets the image file entry ID of this marketing event announcement.
	 *
	 * @param imageFileEntryId the image file entry ID of this marketing event announcement
	 */
	public void setImageFileEntryId(long imageFileEntryId);

	/**
	 * Returns the link url of this marketing event announcement.
	 *
	 * @return the link url of this marketing event announcement
	 */
	@AutoEscape
	public String getLinkURL();

	/**
	 * Sets the link url of this marketing event announcement.
	 *
	 * @param linkURL the link url of this marketing event announcement
	 */
	public void setLinkURL(String linkURL);

	/**
	 * Returns the link label of this marketing event announcement.
	 *
	 * @return the link label of this marketing event announcement
	 */
	@AutoEscape
	public String getLinkLabel();

	/**
	 * Sets the link label of this marketing event announcement.
	 *
	 * @param linkLabel the link label of this marketing event announcement
	 */
	public void setLinkLabel(String linkLabel);

	/**
	 * Returns the display date of this marketing event announcement.
	 *
	 * @return the display date of this marketing event announcement
	 */
	public Date getDisplayDate();

	/**
	 * Sets the display date of this marketing event announcement.
	 *
	 * @param displayDate the display date of this marketing event announcement
	 */
	public void setDisplayDate(Date displayDate);

	/**
	 * Returns the status of this marketing event announcement.
	 *
	 * @return the status of this marketing event announcement
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this marketing event announcement.
	 *
	 * @param status the status of this marketing event announcement
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this marketing event announcement.
	 *
	 * @return the status by user ID of this marketing event announcement
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this marketing event announcement.
	 *
	 * @param statusByUserId the status by user ID of this marketing event announcement
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this marketing event announcement.
	 *
	 * @return the status by user uuid of this marketing event announcement
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this marketing event announcement.
	 *
	 * @param statusByUserUuid the status by user uuid of this marketing event announcement
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this marketing event announcement.
	 *
	 * @return the status by user name of this marketing event announcement
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this marketing event announcement.
	 *
	 * @param statusByUserName the status by user name of this marketing event announcement
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this marketing event announcement.
	 *
	 * @return the status date of this marketing event announcement
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this marketing event announcement.
	 *
	 * @param statusDate the status date of this marketing event announcement
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns <code>true</code> if this marketing event announcement is approved.
	 *
	 * @return <code>true</code> if this marketing event announcement is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this marketing event announcement is denied.
	 *
	 * @return <code>true</code> if this marketing event announcement is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this marketing event announcement is a draft.
	 *
	 * @return <code>true</code> if this marketing event announcement is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this marketing event announcement is expired.
	 *
	 * @return <code>true</code> if this marketing event announcement is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this marketing event announcement is inactive.
	 *
	 * @return <code>true</code> if this marketing event announcement is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this marketing event announcement is incomplete.
	 *
	 * @return <code>true</code> if this marketing event announcement is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this marketing event announcement is pending.
	 *
	 * @return <code>true</code> if this marketing event announcement is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this marketing event announcement is scheduled.
	 *
	 * @return <code>true</code> if this marketing event announcement is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(MarketingEventAnnouncement marketingEventAnnouncement);

	@Override
	public int hashCode();

	@Override
	public CacheModel<MarketingEventAnnouncement> toCacheModel();

	@Override
	public MarketingEventAnnouncement toEscapedModel();

	@Override
	public MarketingEventAnnouncement toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}
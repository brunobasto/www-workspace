/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.osb.www.marketing.events.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.LocaleException;
import com.liferay.portal.kernel.model.AuditedModel;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.LocalizedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;
import java.util.Locale;
import java.util.Map;

/**
 * The base model interface for the MarketingEvent service. Represents a row in the &quot;OSB_MarketingEvent&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.osb.www.marketing.events.model.impl.MarketingEventModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.osb.www.marketing.events.model.impl.MarketingEventImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see MarketingEvent
 * @see com.liferay.osb.www.marketing.events.model.impl.MarketingEventImpl
 * @see com.liferay.osb.www.marketing.events.model.impl.MarketingEventModelImpl
 * @generated
 */
@ProviderType
public interface MarketingEventModel extends AuditedModel,
	BaseModel<MarketingEvent>, LocalizedModel, ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a marketing event model instance should use the {@link MarketingEvent} interface instead.
	 */

	/**
	 * Returns the primary key of this marketing event.
	 *
	 * @return the primary key of this marketing event
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this marketing event.
	 *
	 * @param primaryKey the primary key of this marketing event
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the marketing event ID of this marketing event.
	 *
	 * @return the marketing event ID of this marketing event
	 */
	public long getMarketingEventId();

	/**
	 * Sets the marketing event ID of this marketing event.
	 *
	 * @param marketingEventId the marketing event ID of this marketing event
	 */
	public void setMarketingEventId(long marketingEventId);

	/**
	 * Returns the company ID of this marketing event.
	 *
	 * @return the company ID of this marketing event
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this marketing event.
	 *
	 * @param companyId the company ID of this marketing event
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this marketing event.
	 *
	 * @return the user ID of this marketing event
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this marketing event.
	 *
	 * @param userId the user ID of this marketing event
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this marketing event.
	 *
	 * @return the user uuid of this marketing event
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this marketing event.
	 *
	 * @param userUuid the user uuid of this marketing event
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this marketing event.
	 *
	 * @return the user name of this marketing event
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this marketing event.
	 *
	 * @param userName the user name of this marketing event
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this marketing event.
	 *
	 * @return the create date of this marketing event
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this marketing event.
	 *
	 * @param createDate the create date of this marketing event
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this marketing event.
	 *
	 * @return the modified date of this marketing event
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this marketing event.
	 *
	 * @param modifiedDate the modified date of this marketing event
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the type of this marketing event.
	 *
	 * @return the type of this marketing event
	 */
	public int getType();

	/**
	 * Sets the type of this marketing event.
	 *
	 * @param type the type of this marketing event
	 */
	public void setType(int type);

	/**
	 * Returns the title of this marketing event.
	 *
	 * @return the title of this marketing event
	 */
	public String getTitle();

	/**
	 * Returns the localized title of this marketing event in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized title of this marketing event
	 */
	@AutoEscape
	public String getTitle(Locale locale);

	/**
	 * Returns the localized title of this marketing event in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this marketing event. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getTitle(Locale locale, boolean useDefault);

	/**
	 * Returns the localized title of this marketing event in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized title of this marketing event
	 */
	@AutoEscape
	public String getTitle(String languageId);

	/**
	 * Returns the localized title of this marketing event in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized title of this marketing event
	 */
	@AutoEscape
	public String getTitle(String languageId, boolean useDefault);

	@AutoEscape
	public String getTitleCurrentLanguageId();

	@AutoEscape
	public String getTitleCurrentValue();

	/**
	 * Returns a map of the locales and localized titles of this marketing event.
	 *
	 * @return the locales and localized titles of this marketing event
	 */
	public Map<Locale, String> getTitleMap();

	/**
	 * Sets the title of this marketing event.
	 *
	 * @param title the title of this marketing event
	 */
	public void setTitle(String title);

	/**
	 * Sets the localized title of this marketing event in the language.
	 *
	 * @param title the localized title of this marketing event
	 * @param locale the locale of the language
	 */
	public void setTitle(String title, Locale locale);

	/**
	 * Sets the localized title of this marketing event in the language, and sets the default locale.
	 *
	 * @param title the localized title of this marketing event
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setTitle(String title, Locale locale, Locale defaultLocale);

	public void setTitleCurrentLanguageId(String languageId);

	/**
	 * Sets the localized titles of this marketing event from the map of locales and localized titles.
	 *
	 * @param titleMap the locales and localized titles of this marketing event
	 */
	public void setTitleMap(Map<Locale, String> titleMap);

	/**
	 * Sets the localized titles of this marketing event from the map of locales and localized titles, and sets the default locale.
	 *
	 * @param titleMap the locales and localized titles of this marketing event
	 * @param defaultLocale the default locale
	 */
	public void setTitleMap(Map<Locale, String> titleMap, Locale defaultLocale);

	/**
	 * Returns the title url of this marketing event.
	 *
	 * @return the title url of this marketing event
	 */
	@AutoEscape
	public String getTitleURL();

	/**
	 * Sets the title url of this marketing event.
	 *
	 * @param titleURL the title url of this marketing event
	 */
	public void setTitleURL(String titleURL);

	/**
	 * Returns the hosted by of this marketing event.
	 *
	 * @return the hosted by of this marketing event
	 */
	@AutoEscape
	public String getHostedBy();

	/**
	 * Sets the hosted by of this marketing event.
	 *
	 * @param hostedBy the hosted by of this marketing event
	 */
	public void setHostedBy(String hostedBy);

	/**
	 * Returns the hosted by url of this marketing event.
	 *
	 * @return the hosted by url of this marketing event
	 */
	@AutoEscape
	public String getHostedByURL();

	/**
	 * Sets the hosted by url of this marketing event.
	 *
	 * @param hostedByURL the hosted by url of this marketing event
	 */
	public void setHostedByURL(String hostedByURL);

	/**
	 * Returns the summary of this marketing event.
	 *
	 * @return the summary of this marketing event
	 */
	public String getSummary();

	/**
	 * Returns the localized summary of this marketing event in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param locale the locale of the language
	 * @return the localized summary of this marketing event
	 */
	@AutoEscape
	public String getSummary(Locale locale);

	/**
	 * Returns the localized summary of this marketing event in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param locale the local of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized summary of this marketing event. If <code>useDefault</code> is <code>false</code> and no localization exists for the requested language, an empty string will be returned.
	 */
	@AutoEscape
	public String getSummary(Locale locale, boolean useDefault);

	/**
	 * Returns the localized summary of this marketing event in the language. Uses the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @return the localized summary of this marketing event
	 */
	@AutoEscape
	public String getSummary(String languageId);

	/**
	 * Returns the localized summary of this marketing event in the language, optionally using the default language if no localization exists for the requested language.
	 *
	 * @param languageId the ID of the language
	 * @param useDefault whether to use the default language if no localization exists for the requested language
	 * @return the localized summary of this marketing event
	 */
	@AutoEscape
	public String getSummary(String languageId, boolean useDefault);

	@AutoEscape
	public String getSummaryCurrentLanguageId();

	@AutoEscape
	public String getSummaryCurrentValue();

	/**
	 * Returns a map of the locales and localized summaries of this marketing event.
	 *
	 * @return the locales and localized summaries of this marketing event
	 */
	public Map<Locale, String> getSummaryMap();

	/**
	 * Sets the summary of this marketing event.
	 *
	 * @param summary the summary of this marketing event
	 */
	public void setSummary(String summary);

	/**
	 * Sets the localized summary of this marketing event in the language.
	 *
	 * @param summary the localized summary of this marketing event
	 * @param locale the locale of the language
	 */
	public void setSummary(String summary, Locale locale);

	/**
	 * Sets the localized summary of this marketing event in the language, and sets the default locale.
	 *
	 * @param summary the localized summary of this marketing event
	 * @param locale the locale of the language
	 * @param defaultLocale the default locale
	 */
	public void setSummary(String summary, Locale locale, Locale defaultLocale);

	public void setSummaryCurrentLanguageId(String languageId);

	/**
	 * Sets the localized summaries of this marketing event from the map of locales and localized summaries.
	 *
	 * @param summaryMap the locales and localized summaries of this marketing event
	 */
	public void setSummaryMap(Map<Locale, String> summaryMap);

	/**
	 * Sets the localized summaries of this marketing event from the map of locales and localized summaries, and sets the default locale.
	 *
	 * @param summaryMap the locales and localized summaries of this marketing event
	 * @param defaultLocale the default locale
	 */
	public void setSummaryMap(Map<Locale, String> summaryMap,
		Locale defaultLocale);

	/**
	 * Returns the site group ID of this marketing event.
	 *
	 * @return the site group ID of this marketing event
	 */
	public long getSiteGroupId();

	/**
	 * Sets the site group ID of this marketing event.
	 *
	 * @param siteGroupId the site group ID of this marketing event
	 */
	public void setSiteGroupId(long siteGroupId);

	/**
	 * Returns the image file entry ID of this marketing event.
	 *
	 * @return the image file entry ID of this marketing event
	 */
	public long getImageFileEntryId();

	/**
	 * Sets the image file entry ID of this marketing event.
	 *
	 * @param imageFileEntryId the image file entry ID of this marketing event
	 */
	public void setImageFileEntryId(long imageFileEntryId);

	/**
	 * Returns the slides file entry ID of this marketing event.
	 *
	 * @return the slides file entry ID of this marketing event
	 */
	public long getSlidesFileEntryId();

	/**
	 * Sets the slides file entry ID of this marketing event.
	 *
	 * @param slidesFileEntryId the slides file entry ID of this marketing event
	 */
	public void setSlidesFileEntryId(long slidesFileEntryId);

	/**
	 * Returns the video title of this marketing event.
	 *
	 * @return the video title of this marketing event
	 */
	@AutoEscape
	public String getVideoTitle();

	/**
	 * Sets the video title of this marketing event.
	 *
	 * @param videoTitle the video title of this marketing event
	 */
	public void setVideoTitle(String videoTitle);

	/**
	 * Returns the time zone ID of this marketing event.
	 *
	 * @return the time zone ID of this marketing event
	 */
	@AutoEscape
	public String getTimeZoneId();

	/**
	 * Sets the time zone ID of this marketing event.
	 *
	 * @param timeZoneId the time zone ID of this marketing event
	 */
	public void setTimeZoneId(String timeZoneId);

	/**
	 * Returns the start date of this marketing event.
	 *
	 * @return the start date of this marketing event
	 */
	public Date getStartDate();

	/**
	 * Sets the start date of this marketing event.
	 *
	 * @param startDate the start date of this marketing event
	 */
	public void setStartDate(Date startDate);

	/**
	 * Returns the end date of this marketing event.
	 *
	 * @return the end date of this marketing event
	 */
	public Date getEndDate();

	/**
	 * Sets the end date of this marketing event.
	 *
	 * @param endDate the end date of this marketing event
	 */
	public void setEndDate(Date endDate);

	/**
	 * Returns the date tba of this marketing event.
	 *
	 * @return the date tba of this marketing event
	 */
	public boolean getDateTBA();

	/**
	 * Returns <code>true</code> if this marketing event is date tba.
	 *
	 * @return <code>true</code> if this marketing event is date tba; <code>false</code> otherwise
	 */
	public boolean isDateTBA();

	/**
	 * Sets whether this marketing event is date tba.
	 *
	 * @param dateTBA the date tba of this marketing event
	 */
	public void setDateTBA(boolean dateTBA);

	/**
	 * Returns the address ID of this marketing event.
	 *
	 * @return the address ID of this marketing event
	 */
	public long getAddressId();

	/**
	 * Sets the address ID of this marketing event.
	 *
	 * @param addressId the address ID of this marketing event
	 */
	public void setAddressId(long addressId);

	/**
	 * Returns the latitude of this marketing event.
	 *
	 * @return the latitude of this marketing event
	 */
	public double getLatitude();

	/**
	 * Sets the latitude of this marketing event.
	 *
	 * @param latitude the latitude of this marketing event
	 */
	public void setLatitude(double latitude);

	/**
	 * Returns the longitude of this marketing event.
	 *
	 * @return the longitude of this marketing event
	 */
	public double getLongitude();

	/**
	 * Sets the longitude of this marketing event.
	 *
	 * @param longitude the longitude of this marketing event
	 */
	public void setLongitude(double longitude);

	/**
	 * Returns the global region of this marketing event.
	 *
	 * @return the global region of this marketing event
	 */
	public int getGlobalRegion();

	/**
	 * Sets the global region of this marketing event.
	 *
	 * @param globalRegion the global region of this marketing event
	 */
	public void setGlobalRegion(int globalRegion);

	/**
	 * Returns the online of this marketing event.
	 *
	 * @return the online of this marketing event
	 */
	public boolean getOnline();

	/**
	 * Returns <code>true</code> if this marketing event is online.
	 *
	 * @return <code>true</code> if this marketing event is online; <code>false</code> otherwise
	 */
	public boolean isOnline();

	/**
	 * Sets whether this marketing event is online.
	 *
	 * @param online the online of this marketing event
	 */
	public void setOnline(boolean online);

	/**
	 * Returns the registration type of this marketing event.
	 *
	 * @return the registration type of this marketing event
	 */
	public int getRegistrationType();

	/**
	 * Sets the registration type of this marketing event.
	 *
	 * @param registrationType the registration type of this marketing event
	 */
	public void setRegistrationType(int registrationType);

	/**
	 * Returns the registration url of this marketing event.
	 *
	 * @return the registration url of this marketing event
	 */
	@AutoEscape
	public String getRegistrationURL();

	/**
	 * Sets the registration url of this marketing event.
	 *
	 * @param registrationURL the registration url of this marketing event
	 */
	public void setRegistrationURL(String registrationURL);

	/**
	 * Returns the extra settings of this marketing event.
	 *
	 * @return the extra settings of this marketing event
	 */
	@AutoEscape
	public String getExtraSettings();

	/**
	 * Sets the extra settings of this marketing event.
	 *
	 * @param extraSettings the extra settings of this marketing event
	 */
	public void setExtraSettings(String extraSettings);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public String[] getAvailableLanguageIds();

	@Override
	public String getDefaultLanguageId();

	@Override
	public void prepareLocalizedFieldsForImport() throws LocaleException;

	@Override
	public void prepareLocalizedFieldsForImport(Locale defaultImportLocale)
		throws LocaleException;

	@Override
	public Object clone();

	@Override
	public int compareTo(MarketingEvent marketingEvent);

	@Override
	public int hashCode();

	@Override
	public CacheModel<MarketingEvent> toCacheModel();

	@Override
	public MarketingEvent toEscapedModel();

	@Override
	public MarketingEvent toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}